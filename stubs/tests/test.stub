<?php

/**
 * Created by PhpStorm.
 * User: roman
 * Date: 22.10.16
 * Time: 19:56
 */
namespace App\Tests;

use Symfony\Component\HttpFoundation\Response;

class EntityTest extends TestCase
{
    public function testCreate() {
        $this->json('post', '/entities', [
            /*fields*/
        ]);

        $this->assertResponseOk();
    }

    public function testCreateCheckResponse() {
        $this->json('post', '/entities', [
            /*fields*/
        ]);

        $response = array_except(
            $this->getJsonResponse(),
            ['id', 'updated_at', 'created_at']
        );

        $this->assertEqualsFixture('new_entity.json', $response);
    }

    /*required-failure-create-tests*/
    /*wrong-type-failure-create-tests*/

    public function testUpdate() {
        $this->json('put', '/entities/1', [
            /*fields*/
        ]);

        $this->assertResponseStatus(Response::HTTP_NO_CONTENT);
    }

    public function testUpdateNotExists() {
        $this->json('put', '/entities/2', [
            /*fields*/
        ]);

        $this->assertResponseStatus(Response::HTTP_NOT_FOUND);
    }

    /*wrong-type-failure-update-tests*/

    public function testDelete() {
        $this->json('delete', '/entities/1');

        $this->assertResponseStatus(Response::HTTP_NO_CONTENT);
    }

    public function testDeleteNotExists() {
        $this->json('delete', '/entities/2');

        $this->assertResponseStatus(Response::HTTP_NOT_FOUND);
    }

    public function testGet() {
        $this->json('get', '/entities/1');

        $this->assertResponseOk();
    }

    public function testGetCheckResponse() {
        $this->json('get', '/entities/1');

        $response = $this->getJsonResponse();
        $filteredResponse = array_except($response, ['created_at', 'updated_at']);

        $this->assertEqualsFixture('entity.json', $filteredResponse);
    }

    public function testGetNotExists() {
        $this->json('get', '/entities/2');

        $this->assertResponseStatus(Response::HTTP_NOT_FOUND);
    }
}