<?php
/**
 * Created by PhpStorm.
 * User: roman
 * Date: 17.10.16
 * Time: 15:51
 */

namespace App\Http\Controllers;

use App\Http\Requests\CreateEntityRequest;
use App\Http\Requests\GetEntityRequest;
use App\Http\Requests\UpdateEntityRequest;
use App\Http\Requests\DeleteEntityRequest;
use App\Services\EntityService;
use Symfony\Component\HttpFoundation\Response;

class EntityController extends Controller
{
    public function create(CreateEntityRequest $request, EntityService $service) {
        $data = $request->all();

        $result = $service->create($data);

        return response()->json($result);
    }

    public function get(GetEntityRequest $request, EntityService $service, $id) {
        if (!$service->exists(['id' => $id])) {
            return response()->json([
                'error' => 'Entity does not exists'
            ], Response::HTTP_NOT_FOUND);
        }

        $result = $service->first(['id' => $id]);

        return response()->json($result);
    }

    public function update(UpdateEntityRequest $request, EntityService $service, $id) {
        if (!$service->exists(['id' => $id])) {
            return response()->json([
                'error' => 'Entity does not exists'
            ], Response::HTTP_NOT_FOUND);
        }

        $service->update(
            ['id' => $id],
            $request->all()
        );

        return response('', Response::HTTP_NO_CONTENT);
    }

    public function delete(DeleteEntityRequest $request, EntityService $service, $id) {
        if (!$service->exists(['id' => $id])) {
            return response()->json([
                'error' => 'Entity does not exists'
            ], Response::HTTP_NOT_FOUND);
        }

        $service->delete(['id' => $id]);

        return response('', Response::HTTP_NO_CONTENT);
    }
}